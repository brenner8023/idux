import{c as l,t as B,u as O,v as W,w as I,x as N,j as g,y as X}from"./index.b0bc66d4.js";import{H as F,K as r,D as q,N as h,X as J,y as L,G as M,ac as Q,k as Y}from"./vendor.01b03999.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const j=Symbol("checkboxGroupToken");/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const Z={checked:l.oneOfType([String,Number,Boolean]).def(!1),control:B,autofocus:l.bool.def(!1),buttoned:l.bool,disabled:l.bool,indeterminate:l.bool.def(!1),label:l.string,trueValue:l.oneOfType([String,Number,Boolean]).def(!0),falseValue:l.oneOfType([String,Number,Boolean]).def(!1),value:l.any,size:l.oneOf(["sm","md","lg"]),"onUpdate:checked":l.emit(),onChange:l.emit(),onBlur:l.emit(),onFocus:l.emit()},ee={value:l.array().def(()=>[]),control:B,buttoned:l.bool.def(!1),disabled:l.bool.def(!1),gap:l.oneOfType([Number,String]),name:l.string,options:l.array(),size:l.oneOf(["sm","md","lg"]).def("md"),"onUpdate:value":l.emit(),onChange:l.emit()};var G=Object.getOwnPropertySymbols,ae=Object.prototype.hasOwnProperty,le=Object.prototype.propertyIsEnumerable,ne=(e,u)=>{var i={};for(var n in e)ae.call(e,n)&&u.indexOf(n)<0&&(i[n]=e[n]);if(e!=null&&G)for(var n of G(e))u.indexOf(n)<0&&le.call(e,n)&&(i[n]=e[n]);return i},z=F({name:"IxCheckbox",inheritAttrs:!1,props:Z,setup(e,{attrs:u,expose:i,slots:n}){const x=O("common"),b=r(()=>`${x.prefixCls}-checkbox`),v=O("checkbox"),{elementRef:C,focus:o,blur:s}=W();i({focus:o,blur:s});const a=q(j,null),k=r(()=>{var t;return(t=u.name)!=null?t:a==null?void 0:a.props.name}),f=r(()=>{var t,d;return(d=(t=e.buttoned)!=null?t:a==null?void 0:a.props.buttoned)!=null?d:!1}),y=r(()=>{var t,d;return(d=(t=e.size)!=null?t:a==null?void 0:a.props.size)!=null?d:v.size}),{isChecked:m,isDisabled:p,isFocused:R,handleChange:S,handleBlur:T,handleFocus:w}=oe(e,a),A=r(()=>{const{indeterminate:t}=e,d=f.value,c=b.value,_={[c]:!0,[`${c}-button`]:d,[`${c}-checked`]:!t&&m.value,[`${c}-disabled`]:p.value,[`${c}-focused`]:R.value,[`${c}-indeterminate`]:t,[`${c}-${y.value}`]:d};return Q([_,u.class])});return()=>{var t,d;const c=b.value,{autofocus:_,value:D,label:E}=e,V=(d=(t=n.default)==null?void 0:t.call(n))!=null?d:E,K=V&&h("span",{class:`${c}-label`},[V]),$=u,{class:te,style:U,type:ce,tabindex:P}=$,H=ne($,["class","style","type","tabindex"]);return h("label",{class:A.value,style:U,role:"checkbox","aria-checked":m.value,"aria-disabled":p.value},[h("span",{class:`${c}-input`},[h("input",J({ref:C,type:"checkbox",class:`${c}-input-inner`,"aria-hidden":!0},H,{autofocus:_,name:k.value,value:D,checked:m.value,disabled:p.value,onChange:S,onBlur:T,onFocus:w}),null),!f.value&&h("span",{class:`${c}-input-box`,tabindex:P},null)]),K,f.value&&h("span",{class:`${c}-button-tick`,tabindex:P},null)])}}});const oe=(e,u)=>{let i,n,x,b;const v=L(!1),C=o=>{v.value=!0,g(e.onFocus,o)};if(u){const{props:o,accessor:s}=u;i=r(()=>{var a,k;return(k=s.valueRef.value)==null?void 0:k.includes((a=e.value)!=null?a:e.trueValue)}),n=r(()=>{var a;return(a=e.disabled)!=null?a:s.disabled.value}),b=a=>{v.value=!1,g(e.onBlur,a),s.markAsBlurred()},x=a=>{const f=a.target.checked?e.trueValue:e.falseValue,y=e.value,m=[...s.valueRef.value],p=s.valueRef.value.indexOf(y);p===-1?m.push(y):m.splice(p,1),g(e.onChange,f),g(o.onChange,m),s.setValue(m)}}else{const{accessor:o,control:s}=I({valueKey:"checked"});N(s),i=r(()=>o.valueRef.value===e.trueValue),n=r(()=>o.disabled.value),b=a=>{v.value=!1,g(e.onBlur,a),o.markAsBlurred()},x=a=>{const f=a.target.checked?e.trueValue:e.falseValue;g(e.onChange,f),o.setValue(f)}}return{isChecked:i,isDisabled:n,isFocused:v,handleChange:x,handleBlur:b,handleFocus:C}};var se=F({name:"IxCheckboxGroup",props:ee,setup(e,{slots:u}){const{accessor:i,control:n}=I();N(n),M(j,{props:e,accessor:i});const x=O("common"),b=r(()=>`${x.prefixCls}-checkbox-group`),v=r(()=>{const{gap:o}=e,s=b.value;return{[s]:!0,[`${s}-with-gap`]:!Y(o)}}),C=r(()=>{const{gap:o}=e;return o!==0?`gap: ${X(o)};`:void 0});return()=>{var o;const s=e.options?e.options.map(a=>h(z,a,null)):(o=u.default)==null?void 0:o.call(u);return h("div",{class:v.value,style:C.value},[s])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ie=z,de=se;export{ie as I,de as a};
