import{t as e,c as a,v as l,w as s,j as n}from"./index.240f5fc1.js";import{E as o,y as u,G as r,H as t,ad as c,v as i,D as d}from"./vendor.49325c66.js";const h=Symbol("checkboxGroupToken"),b={control:e,autofocus:a.bool.def(!1),checked:a.oneOfType([String,Number,Boolean]).def(!1),disabled:a.bool,indeterminate:a.bool.def(!1),label:a.string,trueValue:a.oneOfType([String,Number,Boolean]).def(!0),falseValue:a.oneOfType([String,Number,Boolean]).def(!1),value:a.string,"onUpdate:checked":a.emit(),onChange:a.emit(),onBlur:a.emit(),onFocus:a.emit()},p={control:e,value:a.arrayOf(a.oneOfType([String,Number])).def((()=>[])),disabled:a.bool.def(!1),name:a.string,options:a.array(),"onUpdate:value":a.emit(),onChange:a.emit()};var f=o({name:"IxCheckbox",props:b,inheritAttrs:!1,setup(e){const a=u(h,null),s=l({keys:["type","tabindex"]}),n=r((()=>{var e;return null!=(e=s.value.name)?e:null==a?void 0:a.props.name})),{isChecked:o,isDisabled:t,handleChange:c,handleBlur:i,handleFocus:d}=v(e,a),b=x(e,o,t),{inputRef:p,focus:f,blur:m}=k();return{classes:b,attrs:s,name:n,isChecked:o,isDisabled:t,handleChange:c,handleBlur:i,handleFocus:d,inputRef:p,focus:f,blur:m}},render(){const{autofocus:e,classes:a,isChecked:l,isDisabled:s,attrs:n,$attrs:o,name:u,value:r,handleChange:i,handleBlur:d,handleFocus:h}=this,b=this.$slots.default?this.$slots.default():this.label;return t("label",{class:[a,o.class],role:"checkbox","aria-checked":l,"aria-disabled":s,style:o.style},[t("span",{class:"ix-checkbox-input-wrapper"},[t("input",c({ref:"inputRef",type:"checkbox",class:"ix-checkbox-input","aria-hidden":!0},n,{autofocus:e,name:u,value:r,checked:l,disabled:s,onChange:i,onBlur:d,onFocus:h}),null),t("span",{class:"ix-checkbox-inner",tabindex:o.tabindex},null)]),t("span",{class:"ix-checkbox-label"},[b])])}});const v=(e,a)=>{let l,o,u,t;if(a){const{valueAccessor:s,props:c}=a;l=r((()=>{var a,l;return null==(l=s.value)?void 0:l.includes(null!=(a=e.value)?a:e.trueValue)})),o=r((()=>{var a;return null!=(a=e.disabled)?a:s.disabled})),t=a=>{n(e.onBlur,a),s.markAsBlurred()},u=a=>{const l=a.target.checked?e.trueValue:e.falseValue,o=e.value,u=[...s.value],r=s.value.indexOf(o);-1===r?u.push(o):u.splice(r,1),n(e.onChange,l),n(c.onChange,u),s.setValue(u)}}else{const a=s({valueKey:"checked"});l=r((()=>a.value===e.trueValue)),o=r((()=>a.disabled)),t=l=>{n(e.onBlur,l),a.markAsBlurred()},u=l=>{const s=l.target.checked?e.trueValue:e.falseValue;n(e.onChange,s),a.setValue(s)}}return{isChecked:l,isDisabled:o,handleChange:u,handleBlur:t,handleFocus:a=>n(e.onFocus,a)}},x=(e,a,l)=>r((()=>{const s=l.value,n=a.value,o=e.indeterminate;return{"ix-checkbox":!0,"ix-checkbox-disabled":!!s,"ix-checkbox-indeterminate":!!o,"ix-checkbox-checked":!o&&n}})),k=()=>{const e=i();return{inputRef:e,focus:a=>{var l;return null==(l=e.value)?void 0:l.focus(a)},blur:()=>{var a;return null==(a=e.value)?void 0:a.blur()}}};var m=o({name:"IxCheckboxGroup",props:p,setup(e){const a=s();d(h,{props:e,valueAccessor:a})},render(){var e,a;const l=this.options?this.options.map((e=>t(f,e,null))):null==(a=(e=this.$slots).default)?void 0:a.call(e);return t("div",{class:"ix-checkbox-group"},[l])}});const g=f,C=m;export{g as I,C as a};
