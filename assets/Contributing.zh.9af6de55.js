import{f as l}from"./index.240f5fc1.js";import{a as n,I as o}from"./index.7a935c3e.js";import{o as e,Z as s,d as a,H as u,w as t,e as i}from"./vendor.49325c66.js";var c={setup:()=>({goLink:l=>{window&&(window.location.hash=l)}})};const r={class:"markdown"},p=i("贡献指南"),d=a("span",{class:"subtitle"},null,-1),h={class:"edit-button","aria-label":"Edit this page on Github",href:"https://github.com/IDuxFE/idux/edit/main/docs/Contributing.zh.md",target:"_blank",rel:"noopener noreferrer"},m=a("section",{class:"markdown"},[a("p",null,[i("这篇指南会指导你如何为 "),a("code",null,"@idux"),i(" 贡献一份自己的力量，请在你要提 issue 或者 pull request 之前花几分钟来阅读一遍这篇指南。")]),a("h2",{id:"行为准则"},[a("span",null,"行为准则"),a("a",{onclick:"window.location.hash = '行为准则'",class:"anchor"},"#")]),a("p",null,[i("我们有一份 "),a("a",{href:"https://github.com/IDuxFE/idux/blob/main/CODE_OF_CONDUCT.md",target:"_blank",rel:"noopener"},"行为准则"),i(" ，希望所有的贡献者都能遵守，请花时间阅读一遍全文以确保你能明白哪些是可以做的，哪些是不可以做的。")]),a("h2",{id:"透明的开发"},[a("span",null,"透明的开发"),a("a",{onclick:"window.location.hash = '透明的开发'",class:"anchor"},"#")]),a("p",null,[i("我们所有的工作都会放在 "),a("a",{href:"https://github.com/IDuxFE/idux",target:"_blank",rel:"noopener"},"GitHub"),i(" 上。不管是核心团队的成员还是外部贡献者的 pull request 都需要进过同样流程的 review。")]),a("h2",{id:"Bugs"},[a("span",null,"Bugs"),a("a",{onclick:"window.location.hash = 'Bugs'",class:"anchor"},"#")]),a("p",null,[i("我们使用 "),a("a",{href:"https://github.com/IDuxFE/idux/issues",target:"_blank",rel:"noopener"},"Issues"),i(" 来做 bug 追踪。 如果你想要你发现的 bug 被快速解决，最好的办法就是通过我们提供的 "),a("a",{href:"./"},"issue 助手(TODO)"),i(" 来提 issue。 并且能使用这个 "),a("a",{href:"./"},"模板(TODO)"),i(" 来提供重现。")]),a("p",null,[i("在你报告一个 bug 之前，请先确保已经搜索过已有的 issue 和阅读了我们的 "),a("a",{href:"./"},"常见问题(TODO)"),i("。")]),a("h2",{id:"Features"},[a("span",null,"Features"),a("a",{onclick:"window.location.hash = 'Features'",class:"anchor"},"#")]),a("p",null,[i("如果你有改进我们的 API 或者新增功能的想法，我们同样推荐你使用我们提供的 "),a("a",{href:"./"},"issue 助手(TODO)"),i(" 来新建一个添加新功能的 issue。")]),a("h2",{id:"第一次贡献"},[a("span",null,"第一次贡献"),a("a",{onclick:"window.location.hash = '第一次贡献'",class:"anchor"},"#")]),a("p",null,"如果你还不清楚怎么在 GitHub 上提 Pull Request ，可以阅读下面这些文章来学习："),a("ul",null,[a("li",null,[a("a",{href:"https://opensource.guide/zh-cn/how-to-contribute/",target:"_blank",rel:"noopener"},"如何为开源做贡献")]),a("li",null,[a("a",{href:"https://github.com/firstcontributions/first-contributions/blob/master/translations/README.chs.md",target:"_blank",rel:"noopener"},"第一次参与开源")])]),a("p",null,[i("为了能帮助你开始你的第一次尝试，我们用 "),a("a",{href:"https://github.com/IDuxFE/idux/labels/good%20first%20issue",target:"_blank",rel:"noopener"},"Good First Issue"),i(" 标记了一些比较容易修复的 bug 和小功能。这些 issue 可以很好地做为你的首次尝试。")]),a("p",null,"如果你打算开始处理一个 issue，请先检查一下 issue 下面的留言以确保没有别人正在处理这个 issue。如果当前没有人在处理的话你可以留言告知其他人你将会处理这个 issue，以免别人重复劳动。"),a("p",null,"如果之前有人留言说会处理这个 issue 但是一两个星期都没有动静，那么你也可以接手处理这个 issue，当然还是需要留言告知其他人。"),a("h2",{id:"贡献代码"},[a("span",null,"贡献代码"),a("a",{onclick:"window.location.hash = '贡献代码'",class:"anchor"},"#")]),a("p",null,[a("code",null,"IDuxFE"),i(" 团队会关注所有的 Pull Request，我们会 review 以及合并你的代码，也有可能要求你做一些修改或者告诉你我们为什么不能接受这样的修改。")]),a("p",null,[a("strong",null,"在你发送 Pull Request 之前"),i("，请确认你是按照下面的步骤来做的：")]),a("ul",null,[a("li",null,[i("在项目根目录下运行了 "),a("code",null,"npm install"),i(" ；")]),a("li",null,"如果你修复了一个 bug 或者新增了一个功能，请确保写了相应的测试，这很重要；"),a("li",null,[i("确认所有的测试都是通过的 "),a("code",null,"npm run test"),i(" ；")]),a("li",null,[i("确保你的代码通过了 lint 检查 "),a("code",null,"npm run lint"),i(" ；")]),a("li",null,[i("确保你的代码在提交之前经过了正确的 "),a("a",{href:"https://www.digitalocean.com/community/tutorials/how-to-rebase-and-update-a-pull-request",target:"_blank",rel:"noopener"},"Rebase"),i(" ；")]),a("li",null,[i("确保你的提交信息符合"),a("a",{href:"#commit"},"我们的 commit 规范"),i(" 。")])]),a("h2",{id:"如何提出 Pull Request"},[a("span",null,"如何提出 Pull Request"),a("a",{onclick:"window.location.hash = '如何提出 Pull Request'",class:"anchor"},"#")]),a("ul",null,[a("li",null,"fork 此仓库，以下所有操作均在 fork 之后的仓库上执行；"),a("li",null,[i("在 "),a("code",null,"main"),i(" 分支运行："),a("code",null,"git remote add upstream https://github.com/IDuxFE/idux.git"),i(" ；")]),a("li",null,[i("在 "),a("code",null,"main"),i(" 分支运行: "),a("code",null,"git pull upstream main"),i(" ；")]),a("li",null,[i("在 "),a("code",null,"main"),i(" 分支运行: "),a("code",null,"git push origin main"),i(" ；")]),a("li",null,[i("切换到你要工作的 feature 分支 (例如有一个分支叫 "),a("code",null,"docs-fix"),i("): "),a("code",null,"git checkout docs-fix"),i(" ；")]),a("li",null,[i("在 "),a("code",null,"docs-fix"),i(" 分支运行: "),a("code",null,"git rebase main"),i(" 或 "),a("code",null,"git rebase main -i"),i(" ；")]),a("li",null,[i("在 "),a("code",null,"docs-fix"),i(" 分支修改代码，使用 "),a("code",null,"git add"),i(" 添加要提交的文件后，然后 commit: 请按照 "),a("a",{href:"#commit"},"我们的 commit 规范"),i(" 进行填写；")]),a("li",null,[i("推送代码 "),a("code",null,"git push"),i(" (如果进行了 Rebase 操作，可能需要 "),a("code",null,"-f"),i(")；")]),a("li",null,"在 GitHub 上发起 Pull Request 请求。")]),a("h2",{id:"开发流程"},[a("span",null,"开发流程"),a("a",{onclick:"window.location.hash = '开发流程'",class:"anchor"},"#")]),a("ul",null,[a("li",null,"clone fork 后的仓库"),a("li",null,[i("安装依赖："),a("code",null,"npm install"),i(" 或 "),a("code",null,"yarn")]),a("li",null,[i("常用的命令："),a("ul",null,[a("li",null,[a("code",null,"npm start"),i(" 在本地运行文档网站。")]),a("li",null,[a("code",null,"npm run lint"),i(" 检查代码风格(tips: 使用 "),a("code",null,"npm run lint-fix"),i(" 可以修复简单格式错误)。")]),a("li",null,[a("code",null,"npm run test"),i(" 运行单元测试(tips: 修改 "),a("code",null,"jest.config.js"),i(" 的 "),a("code",null,"root"),i(" 配置可以调整单元测试范围)。")]),a("li",null,[a("code",null,"npm run gen"),i(" 通过图形化界面快速创建模板。")])])])]),a("h2",{id:"代码风格"},[a("span",null,"代码风格"),a("a",{onclick:"window.location.hash = '代码风格'",class:"anchor"},"#")]),a("p",null,[i("我们使用了 "),a("code",null,"eslint"),i(", "),a("code",null,"stylelint"),i(", "),a("code",null,"markdownlint"),i(" 以及 "),a("code",null,"ls-lint"),i(" 来保证整体的代码风格一致。并且在 commit hooks 中配置了自动格式化和 lint, 只要提交通过即可。")]),a("h3",{id:"vue"},[a("span",null,"vue"),a("a",{onclick:"window.location.hash = 'vue'",class:"anchor"},"#")]),a("ul",null,[a("li",null,[i("文件命名："),a("code",null,"PascalCase")]),a("li",null,[i("props"),a("ul",null,[a("li",null,[i("命名："),a("code",null,"camelCase")]),a("li",null,[i("默认值：请使用 "),a("code",null,"@idux/cdk/utils"),i(" 中的 "),a("code",null,"IxPropTypes"),i(", 请注意：在没有显示的指定默认值的情况下，所有类型的默认值都为 "),a("code",null,"undefined"),i(", 这与 vue compiler 默认的行为有所区别。")])])]),a("li",null,[i("slots"),a("ul",null,[a("li",null,[i("命名："),a("code",null,"camelCase")]),a("li",null,"如果与某个 props 的功能一致时，需要跟该 props 同名")])]),a("li",null,[i("emits"),a("ul",null,[a("li",null,[i("命名："),a("code",null,"camelCase")])])]),a("li",null,"尽可能的使用 Composition API 去完成我们的功能，包括 Demo")]),a("h3",{id:"typescript"},[a("span",null,"typescript"),a("a",{onclick:"window.location.hash = 'typescript'",class:"anchor"},"#")]),a("ul",null,[a("li",null,[i("文件命名："),a("code",null,"camelCase")]),a("li",null,[i("变量命名: 通常情况下使用 "),a("code",null,"camelCase"),i(", 对于需要全局共享或者给用户使用的静态常量，使用全大写的 "),a("code",null,"snake_case")]),a("li",null,"尽可能的给出最准确的类型定义"),a("li",null,[i("需要 "),a("code",null,"export"),i(" 的函数，必须指定返回值类型")])]),a("h3",{id:"less"},[a("span",null,"less"),a("a",{onclick:"window.location.hash = 'less'",class:"anchor"},"#")]),a("ul",null,[a("li",null,[i("文件命名："),a("code",null,"camelCase")]),a("li",null,[i("class 命名不需要使用 "),a("code",null,"BEM"),i(", 可以参考 antd 的命名")]),a("li",null,"尽可能的定义变量，方便用户进行自定义"),a("li",null,"变量名必须以组件名为前缀")]),a("h3",{id:"test"},[a("span",null,"test"),a("a",{onclick:"window.location.hash = 'test'",class:"anchor"},"#")]),a("ul",null,[a("li",null,[i("文件命名：与被测试的文件同名，同时添加 "),a("code",null,".spec"),i(" 后缀")]),a("li",null,"test 命名：应该是被测试的 API 或者功能的名字，简单明了即可"),a("li",null,"所有 Public API 都需要有对应的测试用例"),a("li",null,"尽可能的一个测试用例只用于一个 API 或功能的测试")]),a("h3",{id:"docs & demo"},[a("span",null,"docs & demo"),a("a",{onclick:"window.location.hash = 'docs & demo'",class:"anchor"},"#")]),a("ul",null,[a("li",null,[i("文件命名："),a("code",null,"kebab-case")]),a("li",null,"除非多个 API 的关联性很强，否则应该一个 demo 只用于展示一个 API 的用法"),a("li",null,"当 demo 的示例代码比较复杂时，可以单独建立一个同名（首字母大写）的 vue 文件")]),a("h2",{id:"Commit"},[a("span",null,"Commit"),a("a",{onclick:"window.location.hash = 'Commit'",class:"anchor"},"#")]),a("p",null,"对于如何提交 git commit message，我们有非常精确的规则。我们希望所有的 commit message 更具可读性，这样在查看项目历史记录会变得容易，同时我们使用 commit message 生成 Changelog."),a("p",null,[i("本项目使用了 "),a("code",null,"@commitlint"),i(" 作为 commit lint 工具，并使用 "),a("a",{href:"https://www.npmjs.com/package/@commitlint/config-angular",target:"_blank",rel:"noopener"},[a("code",null,"@commitlint/config-angular")]),i("作为基础规则，请使用下面任意一种方式提交你的 commit.")]),a("ul",null,[a("li",null,[i("全局安装 "),a("code",null,"npm install -g commitizen"),i("，然后使用 "),a("code",null,"cz"),i(" 提交")]),a("li",null,[i("使用 "),a("code",null,"git commit -a"),i(" 提交，请注意 message 符合我们的要求")])]),a("h3",{id:"提交格式"},[a("span",null,"提交格式"),a("a",{onclick:"window.location.hash = '提交格式'",class:"anchor"},"#")]),a("p",null,[i("每个 commit message 包括 "),a("strong",null,"header"),i(", "),a("strong",null,"body"),i(" 和 "),a("strong",null,"footer"),i(".")]),a("p",null,[i("header 具有特殊的格式，包括 "),a("strong",null,"type"),i(", "),a("strong",null,"scope"),i(" 和 "),a("strong",null,"subject"),i(", type 和 subject 是必须的，scope 是可选的。")]),a("pre",{class:"language-vim"},[a("code",null,[a("span",{class:"token operator"},"<"),i("type"),a("span",{class:"token operator"},">"),a("span",{class:"token punctuation"},"("),a("span",{class:"token operator"},"<"),i("scope"),a("span",{class:"token operator"},">"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},":"),i(),a("span",{class:"token operator"},"<"),i("subject"),a("span",{class:"token operator"},">"),i("\n"),a("span",{class:"token operator"},"<"),i("BLANK LINE"),a("span",{class:"token operator"},">"),i("\n"),a("span",{class:"token operator"},"<"),i("body"),a("span",{class:"token operator"},">"),i("\n"),a("span",{class:"token operator"},"<"),i("BLANK LINE"),a("span",{class:"token operator"},">"),i("\n"),a("span",{class:"token operator"},"<"),i("footer"),a("span",{class:"token operator"},">")])]),a("p",null,"提交 message 的任何行不能超过 100 个字符！确保 message 在 GitHub 以及各种 git 工具中更易于阅读。"),a("p",null,[i("注脚应该包含 "),a("a",{href:"https://help.github.com/articles/closing-issues-via-commit-messages/",target:"_blank",rel:"noopener"},"closing reference to an issue"),i(" 如果有的话.")]),a("p",null,[i("示例: ("),a("a",{href:"https://github.com/IDuxFE/idux/commits/main",target:"_blank",rel:"noopener"},"更多示例"),i(")")]),a("pre",{class:"language-vim"},[a("code",null,[a("span",{class:"token function"},"docs"),a("span",{class:"token punctuation"},"("),i("changelog"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},":"),i(),a("span",{class:"token keyword"},"update"),i(),a("span",{class:"token keyword"},"change"),i(" log "),a("span",{class:"token keyword"},"to"),i(" beta"),a("span",{class:"token operator"},"."),a("span",{class:"token number"},"5")])]),a("pre",{class:"language-vim"},[a("code",null,[a("span",{class:"token function"},"fix"),a("span",{class:"token punctuation"},"("),i("component"),a("span",{class:"token punctuation"},":"),i("button"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},":"),i(),a("span",{class:"token keyword"},"change"),i(" type not work\n\nButton doesn'"),a("span",{class:"token keyword"},"t"),i(" work when setting its type dynamically"),a("span",{class:"token operator"},"."),i("\n\n"),a("span",{class:"token keyword"},"fix"),i(" #"),a("span",{class:"token number"},"123")])]),a("h3",{id:"Type"},[a("span",null,"Type"),a("a",{onclick:"window.location.hash = 'Type'",class:"anchor"},"#")]),a("p",null,"必须是以下选项之一:"),a("ul",null,[a("li",null,[a("strong",null,"feat"),i(": 一个新特性")]),a("li",null,[a("strong",null,"fix"),i(": 一次 bug 修复")]),a("li",null,[a("strong",null,"docs"),i(": 只是对文档进行修改")]),a("li",null,[a("strong",null,"style"),i(": 不影响代码本身含义的代码风格修改 (white-space, formatting, missing semi-colons, etc)")]),a("li",null,[a("strong",null,"refactor"),i(": 既不属于新特性又不是 bug 修改的代码修改")]),a("li",null,[a("strong",null,"perf"),i(": 性能优化")]),a("li",null,[a("strong",null,"test"),i(": 添加或修改测试用例")]),a("li",null,[a("strong",null,"build"),i(": 修改构建工具 (example scopes: gulp, broccoli, npm)")]),a("li",null,[a("strong",null,"ci"),i(": 修改自动化脚本 (example scopes: Circle, BrowserStack, SauceLabs)")]),a("li",null,[a("strong",null,"revert"),i(": 回滚提交")])]),a("h3",{id:"Scope"},[a("span",null,"Scope"),a("a",{onclick:"window.location.hash = 'Scope'",class:"anchor"},"#")]),a("p",null,"Scope 应该是本次修改所影响模块的名称（文件夹名称或其他有意义的单词），必要时还应该使用模块前缀（例如：cdk, comp, pro）。"),a("pre",{class:"language-vim"},[a("code",null,[a("span",{class:"token operator"},"<"),i("prefix"),a("span",{class:"token punctuation"},":"),i("name"),a("span",{class:"token operator"},">"),i("\n"),a("span",{class:"token operator"},"<"),i("prefix"),a("span",{class:"token punctuation"},":"),i("name1"),a("span",{class:"token punctuation"},","),i("name2"),a("span",{class:"token operator"},">")])]),a("p",null,"以下是一些示例:"),a("ul",null,[a("li",null,[a("strong",null,"cdk:clickOutside")]),a("li",null,[a("strong",null,"cdk:clipboard")]),a("li",null,[a("strong",null,"comp:alert")]),a("li",null,[a("strong",null,"comp:badge,button")]),a("li",null,[a("strong",null,"comp:OTHER_COMPONENT_NAME")])]),a("p",null,"以下模块不需要使用前缀："),a("ul",null,[a("li",null,[a("strong",null,"release"),i(": 用于版本发布")]),a("li",null,[a("strong",null,"packaging"),i(": 用于改变 npm 包的结构、路径等")]),a("li",null,[a("strong",null,"changelog"),i(": 用于修改 CHANGELOG.md")])]),a("p",null,"其他情况可以忽略 scope:"),a("ul",null,[a("li",null,[i("使用 "),a("code",null,"docs"),i(", "),a("code",null,"build"),i(" 或 "),a("code",null,"ci"),i(" 等全局修改(例如:"),a("code",null,"docs: add missing type"),i(").")])]),a("h3",{id:"Subject"},[a("span",null,"Subject"),a("a",{onclick:"window.location.hash = 'Subject'",class:"anchor"},"#")]),a("p",null,"Subject 是本次修改的简洁描述:"),a("ul",null,[a("li",null,'使用祈使句、现在时，例如：使用 "change" 而不是 "changed"、"changes"'),a("li",null,"不大写第一个字母"),a("li",null,"不以小数点(.)结尾")]),a("h3",{id:"Body"},[a("span",null,"Body"),a("a",{onclick:"window.location.hash = 'Body'",class:"anchor"},"#")]),a("p",null,"Body 应包含修改的动机，并对比这与以前的行为，是本次修改的详细描述："),a("ul",null,[a("li",null,'使用祈使句、现在时，例如：使用 "change" 而不是 "changed"、"changes"')]),a("h3",{id:"Footer"},[a("span",null,"Footer"),a("a",{onclick:"window.location.hash = 'Footer'",class:"anchor"},"#")]),a("p",null,[i("Footer 应包含 "),a("strong",null,"Breaking Changes"),i(" 和关闭或关联的 "),a("strong",null,"Issues")]),a("ul",null,[a("li",null,[a("strong",null,"Breaking Changes"),i(" 应该以 "),a("code",null,"BREAKING CHANGE:"),i(" 开头")]),a("li",null,[i("关闭或关联的 "),a("strong",null,"Issues"),i(" 使用 "),a("code",null,"fix #123"),i(" 或者 "),a("code",null,"re #123")])]),a("p",null,[i("详细的解释可以在"),a("a",{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#",target:"_blank",rel:"noopener"},"document commit-message-format"),i("中找到。")])],-1);c.render=function(i,c,g,k,f,b){const w=l,x=n,y=o;return e(),s("article",r,[a("h1",null,[p,d,a("a",h,[u(w,{name:"edit"})])]),u(y,{class:"toc-wrapper",affix:"",offset:"16",onClick:c[0]||(c[0]=l=>k.goLink(l))},{default:t((()=>[u(x,{href:"#行为准则",title:"行为准则"}),u(x,{href:"#透明的开发",title:"透明的开发"}),u(x,{href:"#bugs",title:"Bugs"}),u(x,{href:"#features",title:"Features"}),u(x,{href:"#第一次贡献",title:"第一次贡献"}),u(x,{href:"#贡献代码",title:"贡献代码"}),u(x,{href:"#如何提出-pull-request",title:"如何提出 Pull Request"}),u(x,{href:"#开发流程",title:"开发流程"}),u(x,{href:"#代码风格",title:"代码风格"}),u(x,{href:"#commit",title:"Commit"})])),_:1}),m])};export{c as default};
