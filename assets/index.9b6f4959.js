import{c as l,t as O,u as _,v as X,w as P,x as R,j as g,y as q}from"./index.b0bc66d4.js";import{H as B,K as r,D as J,N as b,X as L,y as M,G as Q,ac as Y,k as Z}from"./vendor.01b03999.js";/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const F=Symbol("radioGroupToken");/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ee={autofocus:l.bool.def(!1),buttoned:l.bool,checked:l.bool.def(!1),control:O,disabled:l.bool,label:l.string,mode:l.oneOf(["default","primary"]),size:l.oneOf(["sm","md","lg"]),value:l.any,"onUpdate:checked":l.emit(),onChange:l.emit(),onBlur:l.emit(),onFocus:l.emit()},ae={value:l.any,control:O,buttoned:l.bool.def(!1),disabled:l.bool.def(!1),gap:l.oneOfType([Number,String]),name:l.string,mode:l.oneOf(["default","primary"]),options:l.array(),size:l.oneOf(["sm","md","lg"]).def("md"),"onUpdate:value":l.emit(),onChange:l.emit()};var I=Object.getOwnPropertySymbols,le=Object.prototype.hasOwnProperty,oe=Object.prototype.propertyIsEnumerable,ne=(e,u)=>{var c={};for(var n in e)le.call(e,n)&&u.indexOf(n)<0&&(c[n]=e[n]);if(e!=null&&I)for(var n of I(e))u.indexOf(n)<0&&oe.call(e,n)&&(c[n]=e[n]);return c},j=B({name:"IxRadio",inheritAttrs:!1,props:ee,setup(e,{attrs:u,expose:c,slots:n}){const v=_("common"),m=r(()=>`${v.prefixCls}-radio`),f=_("radio"),{elementRef:h,focus:o,blur:d}=X();c({focus:o,blur:d});const a=J(F,null),i=r(()=>{var s;return(s=u.name)!=null?s:a==null?void 0:a.props.name}),y=r(()=>{var s;return(s=e.buttoned)!=null?s:a==null?void 0:a.props.buttoned}),G=r(()=>{var s,t;return(t=(s=e.size)!=null?s:a==null?void 0:a.props.size)!=null?t:f.size}),z=r(()=>{var s,t;return(t=(s=e.mode)!=null?s:a==null?void 0:a.props.mode)!=null?t:"default"}),{isChecked:x,isDisabled:C,isFocused:N,handleChange:w,handleBlur:A,handleFocus:D}=se(e,a),E=r(()=>{const s=y.value,t=m.value,p={[t]:!0,[`${t}-button`]:s,[`${t}-checked`]:x.value,[`${t}-disabled`]:C.value,[`${t}-focused`]:N.value,[`${t}-${z.value}`]:s,[`${t}-${G.value}`]:s};return Y([p,u.class])});return()=>{var s,t;const p=m.value,{autofocus:S,value:T,label:V}=e,k=(t=(s=n.default)==null?void 0:s.call(n))!=null?t:V,K=k&&b("span",{class:`${p}-label`},[k]),$=u,{class:re,style:U,type:ue,tabindex:H}=$,W=ne($,["class","style","type","tabindex"]);return b("label",{class:E.value,style:U,role:"radio","aria-checked":x.value,"aria-disabled":C.value},[b("span",{class:`${p}-input`},[b("input",L({ref:h,type:"radio",class:`${p}-input-inner`,"aria-hidden":!0},W,{autofocus:S,checked:x.value,disabled:C.value,name:i.value,value:T,onChange:w,onBlur:A,onFocus:D}),null),y.value?null:b("span",{class:`${p}-input-box`,tabindex:H},null)]),K])}}});const se=(e,u)=>{let c,n;const v=M(!1);let m,f;const h=o=>{v.value=!0,g(e.onFocus,o)};if(u){const{accessor:o,props:d}=u;c=r(()=>o.valueRef.value===e.value),n=r(()=>{var a;return(a=e.disabled)!=null?a:o.disabled.value}),f=a=>{v.value=!1,g(e.onBlur,a),o.markAsBlurred()},m=a=>{const i=a.target.checked;if(g(e.onChange,i),i){const y=e.value;g(d.onChange,y),o.setValue(y)}}}else{const{accessor:o,control:d}=P({valueKey:"checked"});R(d),c=r(()=>o.valueRef.value),n=r(()=>o.disabled.value),f=a=>{v.value=!1,g(e.onBlur,a),o.markAsBlurred()},m=a=>{const i=a.target.checked;g(e.onChange,i),o.setValue(i)}}return{isChecked:c,isDisabled:n,isFocused:v,handleChange:m,handleBlur:f,handleFocus:h}};var te=B({name:"IxRadioGroup",props:ae,setup(e,{slots:u}){const{accessor:c,control:n}=P();R(n),Q(F,{props:e,accessor:c});const v=_("common"),m=r(()=>`${v.prefixCls}-radio-group`),f=r(()=>{const{gap:o}=e,d=m.value;return{[d]:!0,[`${d}-with-gap`]:!Z(o)}}),h=r(()=>{const{gap:o}=e;return o!==0?`gap: ${q(o)};`:void 0});return()=>{var o;const{options:d}=e,a=d?d.map(i=>b(j,i,null)):(o=u.default)==null?void 0:o.call(u);return b("div",{class:f.value,style:h.value},[a])}}});/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/IDuxFE/idux/blob/main/LICENSE
 */const ie=j,ve=te;export{ie as I,ve as a};
